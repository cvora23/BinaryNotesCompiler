
package ieee.poc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "MdapAssociationInformation", isSet = false )
    public class MdapAssociationInformation implements IASN1PreparedElement {
            
        @ASN1Element ( name = "encoding-rules", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private EncodingRules encoding_rules = null;
                
  
        @ASN1Element ( name = "user-info", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private MDSEUserInfo user_info = null;
                
  
        
        public EncodingRules getEncoding_rules () {
            return this.encoding_rules;
        }

        

        public void setEncoding_rules (EncodingRules value) {
            this.encoding_rules = value;
        }
        
  
        
        public MDSEUserInfo getUser_info () {
            return this.user_info;
        }

        

        public void setUser_info (MDSEUserInfo value) {
            this.user_info = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(MdapAssociationInformation.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            