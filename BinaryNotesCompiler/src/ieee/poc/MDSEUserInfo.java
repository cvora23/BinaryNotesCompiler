
package ieee.poc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "MDSEUserInfo", isSet = false )
    public class MDSEUserInfo implements IASN1PreparedElement {
            
        @ASN1Element ( name = "protocolVersion", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private ProtocolVersion protocolVersion = null;
                
  
        @ASN1Element ( name = "nomenclatureVersion", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private NomenclatureVersion nomenclatureVersion = null;
                
  
        @ASN1Element ( name = "functionalUnits", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private FunctionalUnits functionalUnits = null;
                
  
        @ASN1Element ( name = "systemType", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private SystemType systemType = null;
                
  
        @ASN1Element ( name = "startupMode", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private StartupMode startupMode = null;
                
  
        @ASN1Element ( name = "optionList", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private AttributeList optionList = null;
                
  
        @ASN1Element ( name = "supportedAProfiles", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private AttributeList supportedAProfiles = null;
                
  
        
        public ProtocolVersion getProtocolVersion () {
            return this.protocolVersion;
        }

        

        public void setProtocolVersion (ProtocolVersion value) {
            this.protocolVersion = value;
        }
        
  
        
        public NomenclatureVersion getNomenclatureVersion () {
            return this.nomenclatureVersion;
        }

        

        public void setNomenclatureVersion (NomenclatureVersion value) {
            this.nomenclatureVersion = value;
        }
        
  
        
        public FunctionalUnits getFunctionalUnits () {
            return this.functionalUnits;
        }

        

        public void setFunctionalUnits (FunctionalUnits value) {
            this.functionalUnits = value;
        }
        
  
        
        public SystemType getSystemType () {
            return this.systemType;
        }

        

        public void setSystemType (SystemType value) {
            this.systemType = value;
        }
        
  
        
        public StartupMode getStartupMode () {
            return this.startupMode;
        }

        

        public void setStartupMode (StartupMode value) {
            this.startupMode = value;
        }
        
  
        
        public AttributeList getOptionList () {
            return this.optionList;
        }

        

        public void setOptionList (AttributeList value) {
            this.optionList = value;
        }
        
  
        
        public AttributeList getSupportedAProfiles () {
            return this.supportedAProfiles;
        }

        

        public void setSupportedAProfiles (AttributeList value) {
            this.supportedAProfiles = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(MDSEUserInfo.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            