
package ieee.poc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "Poc_EnumRecordMetric", isSet = false )
    public class Poc_EnumRecordMetric implements IASN1PreparedElement {
            
        @ASN1Element ( name = "record-type-code", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private OID_Type record_type_code = null;
                
  @ASN1Any( name = "" )
    
        @ASN1Element ( name = "record-data", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private byte[] record_data = null;
                
  
        
        public OID_Type getRecord_type_code () {
            return this.record_type_code;
        }

        

        public void setRecord_type_code (OID_Type value) {
            this.record_type_code = value;
        }
        
  
        
        public byte[] getRecord_data () {
            return this.record_data;
        }

        

        public void setRecord_data (byte[] value) {
            this.record_data = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(Poc_EnumRecordMetric.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            