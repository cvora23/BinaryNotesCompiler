
package ieee.poc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "Poc_PollMdibDataReq", isSet = false )
    public class Poc_PollMdibDataReq implements IASN1PreparedElement {
            
        @ASN1Element ( name = "poll-number", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private INT_U16 poll_number = null;
                
  
        @ASN1Element ( name = "polled-obj-type", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private TYPE polled_obj_type = null;
                
  
        @ASN1Element ( name = "polled-attr-grp", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private OID_Type polled_attr_grp = null;
                
  
        
        public INT_U16 getPoll_number () {
            return this.poll_number;
        }

        

        public void setPoll_number (INT_U16 value) {
            this.poll_number = value;
        }
        
  
        
        public TYPE getPolled_obj_type () {
            return this.polled_obj_type;
        }

        

        public void setPolled_obj_type (TYPE value) {
            this.polled_obj_type = value;
        }
        
  
        
        public OID_Type getPolled_attr_grp () {
            return this.polled_attr_grp;
        }

        

        public void setPolled_attr_grp (OID_Type value) {
            this.polled_attr_grp = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(Poc_PollMdibDataReq.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            