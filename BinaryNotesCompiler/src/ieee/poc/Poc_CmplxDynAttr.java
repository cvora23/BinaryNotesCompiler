
package ieee.poc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "Poc_CmplxDynAttr", isSet = false )
    public class Poc_CmplxDynAttr implements IASN1PreparedElement {
            
        @ASN1Element ( name = "cm-dyn-cnt", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private INT_U8 cm_dyn_cnt = null;
                
  
        @ASN1Element ( name = "unused", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private INT_U8 unused = null;
                
  
        @ASN1Element ( name = "cm-dyn-elem-list", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Poc_CmplxDynAttrElemList cm_dyn_elem_list = null;
                
  
        
        public INT_U8 getCm_dyn_cnt () {
            return this.cm_dyn_cnt;
        }

        

        public void setCm_dyn_cnt (INT_U8 value) {
            this.cm_dyn_cnt = value;
        }
        
  
        
        public INT_U8 getUnused () {
            return this.unused;
        }

        

        public void setUnused (INT_U8 value) {
            this.unused = value;
        }
        
  
        
        public Poc_CmplxDynAttrElemList getCm_dyn_elem_list () {
            return this.cm_dyn_elem_list;
        }

        

        public void setCm_dyn_elem_list (Poc_CmplxDynAttrElemList value) {
            this.cm_dyn_elem_list = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(Poc_CmplxDynAttr.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            