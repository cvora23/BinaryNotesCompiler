
package ieee.poc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "Poc_Locale", isSet = false )
    public class Poc_Locale implements IASN1PreparedElement {
            
        @ASN1Element ( name = "language", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private INT_U32 language = null;
                
  
        @ASN1Element ( name = "country", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private INT_U32 country = null;
                
  
        @ASN1Element ( name = "charset", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Poc_CharSet charset = null;
                
  
        @ASN1Element ( name = "str-spec", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Poc_StringSpec str_spec = null;
                
  
        
        public INT_U32 getLanguage () {
            return this.language;
        }

        

        public void setLanguage (INT_U32 value) {
            this.language = value;
        }
        
  
        
        public INT_U32 getCountry () {
            return this.country;
        }

        

        public void setCountry (INT_U32 value) {
            this.country = value;
        }
        
  
        
        public Poc_CharSet getCharset () {
            return this.charset;
        }

        

        public void setCharset (Poc_CharSet value) {
            this.charset = value;
        }
        
  
        
        public Poc_StringSpec getStr_spec () {
            return this.str_spec;
        }

        

        public void setStr_spec (Poc_StringSpec value) {
            this.str_spec = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(Poc_Locale.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            