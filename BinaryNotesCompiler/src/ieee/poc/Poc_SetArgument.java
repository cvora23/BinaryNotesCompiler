
package ieee.poc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "Poc_SetArgument", isSet = false )
    public class Poc_SetArgument implements IASN1PreparedElement {
            
        @ASN1Element ( name = "managedObject", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Poc_ManagedObjectId managedObject = null;
                
  
        @ASN1Element ( name = "scope", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Poc_Scope scope = null;
                
  
        @ASN1Element ( name = "modificationList", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private ModificationList modificationList = null;
                
  
        
        public Poc_ManagedObjectId getManagedObject () {
            return this.managedObject;
        }

        

        public void setManagedObject (Poc_ManagedObjectId value) {
            this.managedObject = value;
        }
        
  
        
        public Poc_Scope getScope () {
            return this.scope;
        }

        

        public void setScope (Poc_Scope value) {
            this.scope = value;
        }
        
  
        
        public ModificationList getModificationList () {
            return this.modificationList;
        }

        

        public void setModificationList (ModificationList value) {
            this.modificationList = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(Poc_SetArgument.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            