
package ieee.poc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "Poc_CreateArgument", isSet = false )
    public class Poc_CreateArgument implements IASN1PreparedElement {
            
        @ASN1Element ( name = "managedObjectClass", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private OID_Type managedObjectClass = null;
                
  
        @ASN1Element ( name = "superiorManagedObject", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Poc_ManagedObjectId superiorManagedObject = null;
                
  
        @ASN1Element ( name = "attributeList", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private AttributeList attributeList = null;
                
  
        
        public OID_Type getManagedObjectClass () {
            return this.managedObjectClass;
        }

        

        public void setManagedObjectClass (OID_Type value) {
            this.managedObjectClass = value;
        }
        
  
        
        public Poc_ManagedObjectId getSuperiorManagedObject () {
            return this.superiorManagedObject;
        }

        

        public void setSuperiorManagedObject (Poc_ManagedObjectId value) {
            this.superiorManagedObject = value;
        }
        
  
        
        public AttributeList getAttributeList () {
            return this.attributeList;
        }

        

        public void setAttributeList (AttributeList value) {
            this.attributeList = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(Poc_CreateArgument.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            