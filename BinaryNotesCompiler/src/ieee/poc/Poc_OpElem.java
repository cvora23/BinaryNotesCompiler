
package ieee.poc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "Poc_OpElem", isSet = false )
    public class Poc_OpElem implements IASN1PreparedElement {
            
        @ASN1Element ( name = "op-class-id", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private OID_Type op_class_id = null;
                
  
        @ASN1Element ( name = "op-instance-no", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private InstNumber op_instance_no = null;
                
  
        
        public OID_Type getOp_class_id () {
            return this.op_class_id;
        }

        

        public void setOp_class_id (OID_Type value) {
            this.op_class_id = value;
        }
        
  
        
        public InstNumber getOp_instance_no () {
            return this.op_instance_no;
        }

        

        public void setOp_instance_no (InstNumber value) {
            this.op_instance_no = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(Poc_OpElem.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            